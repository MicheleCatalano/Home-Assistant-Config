- alias: "Startup Notification"
  trigger:
    platform: homeassistant
    event: start
  action:
      service: notify.HASS_notifier_bot
      data:
        title: "\u26A0\uFE0F Home Assistant \xE8 appena ripartito"
        message: "Riavvio Home Assistant"

- alias: "Send notification upon failed login attempt"
  trigger:
    - platform: state
      entity_id: persistent_notification.httplogin
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  action:
    - service: notify.HASS_notifier_bot
      data_template:
        title: "Login ad Home Assistant fallito!"
        message: "Tentativo di Login fallito, *possibile intrusione*"
        #data:
        #  url: http://www.ip-tracker.org/locator/ip-lookup.php?ip={{ states.persistent_notification.httplogin.state.split ("from ") [1]}}
############################################################
# HASS Theme Control
############################################################

# IF: { input_select hass_template is changed by user OR home assistants boots up } THEN: { set theme to state given by input_select.hass_template }
- alias: switch_hass_template
  id: switch_hass_template
  trigger:
    - platform: state
      entity_id: input_select.hass_template
    - platform: homeassistant
      event: start
  action:
    - service: frontend.set_theme
      data_template:
        name: "{{ states.input_select.hass_template.state }}"

  # IF: { sun.sun goes under horizon } THEN: { set theme to night mode }
- alias: day_to_night_theme
  id: day_to_night_theme
  trigger:
    - platform: state
      entity_id: sun.sun
      from: 'above_horizon'
      to: 'below_horizon'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.hass_template
        option: 'dark'
  # IF: { sun.sun is up } THEN: { set theme to day mode }
- alias: night_to_day_theme
  id: night_to_day_theme
  trigger:
    - platform: state
      entity_id: sun.sun
      from: 'below_horizon'
      to: 'above_horizon'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.hass_template
        option: 'default'

#- alias: testing
#  trigger:
#  - platform: state
#    entity_id: device_tracker.michele_iphone
#    from: "home"
#    to: "not_home"
#  action:
#    service: notify.HASS_notifier_bot
#    data:
#      title: m
#      message: Me ne sono andato!
##  Uses IFTTT to notify me of bad logins.
###################################


#- alias: temperatura
#  trigger:
#  - platform: numeric_state
#    entity_id: sensor.cpu_temp
#    above: 56
#  action:
#    service: notify.HASS_notifier_bot
#    data:
#      title: Attenzione
#      message: Temperatura processore alta!
#- alias: stalkerizza out
#  trigger:
#  - platform: state
#    entity_id: device_tracker.iphoneElenaSofia
#    from: "home"
#    to: "not_home"
#  action:
#    service: notify.HASS_notifier_bot
#    data:
#      title: Out
#      message: iphoneElenaSofia WiFi Out

#- alias: stalkerizza in
#  trigger:
#  - platform: state
#    entity_id: device_tracker.iphoneElenaSofia
#    from: "not_home"
#    to: "home"
#  action:
#    service: notify.HASS_notifier_bot
#    data:
#      title: In
#      message: iphoneElenaSofia WiFi In
